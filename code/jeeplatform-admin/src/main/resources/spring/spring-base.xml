<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--&lt;!&ndash;suppress SpringModelInspection &ndash;&gt;-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
	<!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
	<!--xmlns:aop="http://www.springframework.org/schema/aop" -->
	<!--xmlns:context="http://www.springframework.org/schema/context"-->
	<!--xmlns:tx="http://www.springframework.org/schema/tx"-->
	<!--xmlns:jpa="http://www.springframework.org/schema/data/jpa"-->
	<!--xsi:schemaLocation="http://www.springframework.org/schema/beans -->
						<!--http://www.springframework.org/schema/beans/spring-beans.xsd-->
						<!--http://www.springframework.org/schema/aop -->
						<!--http://www.springframework.org/schema/aop/spring-aop.xsd-->
						<!--http://www.springframework.org/schema/context -->
						<!--http://www.springframework.org/schema/context/spring-context.xsd-->
						<!--http://www.springframework.org/schema/tx -->
						<!--http://www.springframework.org/schema/tx/spring-tx.xsd-->
						<!--http://www.springframework.org/schema/data/jpa-->
					    <!--http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd-->
						<!--">-->
	<!---->
	<!--&lt;!&ndash; 启用Spring框架的注解 &ndash;&gt;-->
	<!--<context:annotation-config />-->
	<!---->
	<!--&lt;!&ndash; 引入Shiro框架配置 start &ndash;&gt;-->
	<!--<import resource="spring-shiro.xml" />-->
	<!--&lt;!&ndash; 引入Shiro框架配置 end &ndash;&gt;-->
	<!---->
	<!--&lt;!&ndash; 引入Velocity的配置 start &ndash;&gt;-->
	<!--<import resource="spring-velocity.xml"/>-->
	<!--&lt;!&ndash; 引入Velocity的配置 end &ndash;&gt;-->
	<!---->
	<!--&lt;!&ndash; 启动注解扫描，组件由SpringMVC配置文件扫描 &ndash;&gt;-->
	<!--<context:component-scan base-package="org.muses.jeeplatform" use-default-filters="false">-->
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />-->
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />-->
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />-->
    <!--</context:component-scan> -->
	<!---->
	<!--&lt;!&ndash; 加载属性文件配置 &ndash;&gt;-->
	<!--<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  -->
		<!--<property name="locations">  -->
			<!--<list>  -->
                 <!--<value>classpath:dbconfig.properties</value>-->
            <!--</list>  -->
        <!--</property>  -->
	<!--</bean> -->
	<!---->
	<!--&lt;!&ndash; 阿里 druid数据库连接池 start&ndash;&gt;-->
	<!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  -->
         <!--&lt;!&ndash; 数据库基本信息配置 &ndash;&gt;-->
         <!--<property name="url" value="${url}" />  -->
         <!--<property name="username" value="${username}" />  -->
         <!--<property name="password" value="${password}" />  -->
         <!--<property name="driverClassName" value="${driverClassName}" />  -->
         <!--<property name="filters" value="${filters}" />  -->
   		 <!--&lt;!&ndash; 最大并发连接数 &ndash;&gt;-->
         <!--<property name="maxActive" value="${maxActive}" />-->
         <!--&lt;!&ndash; 初始化连接数量 &ndash;&gt;-->
         <!--<property name="initialSize" value="${initialSize}" />-->
         <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
         <!--<property name="maxWait" value="${maxWait}" />-->
         <!--&lt;!&ndash; 最小空闲连接数 &ndash;&gt;-->
         <!--<property name="minIdle" value="${minIdle}" />  -->
   		 <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
         <!--<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />-->
         <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
         <!--<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  -->
         <!--<property name="validationQuery" value="${validationQuery}" />  -->
         <!--<property name="testWhileIdle" value="${testWhileIdle}" />  -->
         <!--<property name="testOnBorrow" value="${testOnBorrow}" />  -->
         <!--<property name="testOnReturn" value="${testOnReturn}" />  -->
         <!--<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />-->
         <!--&lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;-->
         <!--<property name="removeAbandoned" value="${removeAbandoned}" />-->
         <!--&lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;-->
         <!--<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />-->
         <!--&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;   -->
         <!--<property name="logAbandoned" value="${logAbandoned}" />-->
	<!--</bean>-->
	<!--&lt;!&ndash; 阿里 druid数据库连接池 end&ndash;&gt;-->
	<!---->
	<!--&lt;!&ndash; 配置 JPA 的 EntityManagerFactory &ndash;&gt;-->
	<!--<bean id="entityManagerFactory"-->
		<!--class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
		<!--<property name="dataSource" ref="dataSource"></property>-->
		<!--<property name="packagesToScan" value="org.muses.jeeplatform.model.entity"></property>-->
		<!--<property name="jpaVendorAdapter">-->
			<!--<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">-->
				<!--<property name="generateDdl" value="false" />-->
				<!--<property name="database" value="MYSQL" />-->
				<!--<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />-->
			<!--</bean>-->
		<!--</property>-->
		<!--<property name="jpaDialect">-->
			<!--<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />-->
		<!--</property>-->
	<!--</bean>-->
	<!---->
	<!--&lt;!&ndash; 配置事务管理 &ndash;&gt;-->
	<!--<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">-->
		<!--<property name="entityManagerFactory" ref="entityManagerFactory"></property>-->
	<!--</bean>-->
	<!---->
	<!--&lt;!&ndash; 配置SpringData &ndash;&gt;-->
	<!--<jpa:repositories base-package="org.muses.jeeplatform" entity-manager-factory-ref="entityManagerFactory" />-->
	<!---->
	<!--&lt;!&ndash; 业务操作方法的事务控制 &ndash;&gt;-->
	<!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
		<!--<tx:attributes>-->
			<!--&lt;!&ndash; 配置查询方法为只读事务 &ndash;&gt;-->
			<!--<tx:method name="find*" propagation="REQUIRED" read-only="true"-->
					   <!--rollback-for="java.lang.Exception" />-->
			<!--&lt;!&ndash; 其它方法都设置为非只读事务 &ndash;&gt;-->
			<!--<tx:method name="del*" propagation="REQUIRED" read-only="false" -->
			           <!--rollback-for="java.lang.Exception"/>-->
			<!--<tx:method name="add*" propagation="REQUIRED" read-only="false" -->
			           <!--rollback-for="java.lang.Exception" />-->
			<!--<tx:method name="update*" propagation="REQUIRED" read-only="false" -->
			           <!--rollback-for="java.lang.Exception" />-->
			<!--<tx:method name="save*" propagation="REQUIRED" read-only="false" -->
			           <!--rollback-for="java.lang.Exception" />-->
		<!--</tx:attributes>-->
	<!--</tx:advice>	-->
	<!---->
	<!--&lt;!&ndash; 开启事务注解 &ndash;&gt;-->
	<!--<tx:annotation-driven transaction-manager="transactionManager" />-->
	<!---->
	<!--&lt;!&ndash; 开启Spring AOP的织入代理 &ndash;&gt;-->
	<!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->
	<!---->
	<!--&lt;!&ndash; 配置Spring AOP，Spring是通过AOP进行事务管理的&ndash;&gt;-->
	<!--<aop:config>-->
		<!--<aop:pointcut id="pc" expression="execution(* org.muses.jeeplatform..service..*(..))" />-->
		<!--<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />-->
	<!--</aop:config>-->
	<!---->
<!--</beans>-->
